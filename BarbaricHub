--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==6) then v29=nil;function v29()local v31=0 -0 ;local v32;local v33;local v34;local v35;local v36;local v37;local v38;while true do if ((0 + 0)==v31) then v32=0;v33=nil;v31=1643 -(348 + 1294) ;end if (v31~=(5 -2)) then else v38=nil;while true do local v80=0 -0 ;while true do if (v80==0) then local v98=0 -0 ;while true do if (v98==(0 -0)) then if (v32==(4 -3)) then local v105=0 + 0 ;while true do if (v105~=(1 -0)) then else v38={};v32=2 + 0 ;break;end if (v105==(0 -0)) then v36={v33,v34,nil,v35};v37=v24();v105=1 + 0 ;end end end if (v32==(14 -11)) then for v107=1,v24() do v34[v107-(1 + 0) ]=v29();end for v109=1,v24() do v35[v109]=v24();end return v36;end v98=1 -0 ;end if ((2 -1)~=v98) then else v80=1589 -(250 + 1338) ;break;end end end if (v80==1) then if (v32~=(0 -0)) then else local v103=0 + 0 ;while true do if (1~=v103) then else v35={};v32=1 + 0 ;break;end if (v103~=(0 + 0)) then else v33={};v34={};v103=1 + 0 ;end end end if (v32==2) then local v104=475 -(244 + 231) ;while true do if (v104~=1) then else for v111=1,v24() do local v112=0 -0 ;local v113;local v114;local v115;while true do if (v112~=(625 -(556 + 68))) then else v115=nil;while true do if (v113~=(0 + 0)) then else v114=0 + 0 ;v115=nil;v113=1113 -(204 + 908) ;end if (v113==(3 -2)) then while true do if (v114==(1979 -(1794 + 185))) then v115=v22();if (v21(v115,1 + 0 ,3 -2 )==(0 -0)) then local v132=0 + 0 ;local v133;local v134;local v135;while true do if (3==v132) then if (v21(v134,2 + 1 ,2 + 1 )~=(1458 -(1128 + 329))) then else v135[4]=v38[v135[4]];end v33[v111]=v135;break;end if ((7 -5)==v132) then local v210=0 + 0 ;while true do if ((1 + 0)~=v210) then else v132=680 -(617 + 60) ;break;end if (v210==(0 + 0)) then if (v21(v134,1 + 0 ,1)==(1 -0)) then v135[2 + 0 ]=v38[v135[630 -(561 + 67) ]];end if (v21(v134,1301 -(1062 + 237) ,2)~=(1426 -(601 + 824))) then else v135[12 -9 ]=v38[v135[3]];end v210=1105 -(767 + 337) ;end end end if (v132~=(934 -(611 + 323))) then else local v211=0 + 0 ;while true do if (v211==(1 + 0)) then v132=1 + 0 ;break;end if (v211==0) then v133=v21(v115,684 -(419 + 263) ,3);v134=v21(v115,3 + 1 ,5 + 1 );v211=730 -(552 + 177) ;end end end if (v132~=(1 -0)) then else local v212=0;while true do if (v212==(227 -(8 + 219))) then local v231=0;while true do if (v231~=(1 -0)) then else v212=1957 -(937 + 1019) ;break;end if (v231~=(0 + 0)) then else v135={v23(),v23(),nil,nil};if (v133==(0 + 0)) then local v274=0 + 0 ;local v275;local v276;local v277;while true do if (v274==(0 -0)) then v275=0 + 0 ;v276=nil;v274=1 + 0 ;end if (v274==(315 -(242 + 72))) then v277=nil;while true do if (v275==0) then v276=1324 -(179 + 1145) ;v277=nil;v275=1 + 0 ;end if (v275~=1) then else while true do if (v276~=0) then else v277=0;while true do if ((387 -(293 + 94))==v277) then v135[1873 -(1235 + 635) ]=v23();v135[2 + 2 ]=v23();break;end end break;end end break;end end break;end end elseif (v133==(2 -1)) then v135[3]=v24();elseif (v133==2) then v135[1296 -(792 + 501) ]=v24() -(2^(13 + 3)) ;elseif (v133~=(1617 -(148 + 1466))) then else local v302=0 -0 ;while true do if (v302~=(0 -0)) then else v135[66 -(54 + 9) ]=v24() -((6 -4)^(36 -20)) ;v135[1863 -(333 + 1526) ]=v23();break;end end end v231=1 -0 ;end end end if ((1308 -(115 + 1192))~=v212) then else v132=2;break;end end end end end break;end end break;end end break;end if (v112==(562 -(350 + 212))) then v113=162 -(96 + 66) ;v114=nil;v112=1;end end end v32=1784 -(221 + 1560) ;break;end if (v104==0) then for v116=1835 -(1126 + 708) ,v37 do local v117=0 + 0 ;local v118;local v119;local v120;local v121;while true do if (0==v117) then v118=0 -0 ;v119=nil;v117=1 + 0 ;end if (v117==(3 -1)) then while true do if (v118~=(0 -0)) then else local v124=378 -(181 + 197) ;while true do if (v124~=(139 -(93 + 46))) then else v119=0 -0 ;v120=nil;v124=1 + 0 ;end if (v124~=(1 + 0)) then else v118=1 + 0 ;break;end end end if ((3 -2)==v118) then v121=nil;while true do if (v119==(0 -0)) then local v126=1786 -(244 + 1542) ;local v127;local v128;while true do if (v126==(3 -2)) then while true do if (v127==0) then v128=0 -0 ;while true do if (v128==(703 -(694 + 9))) then v120=v22();v121=nil;v128=934 -(418 + 515) ;end if ((40 -(32 + 7))~=v128) then else v119=1978 -(927 + 1050) ;break;end end break;end end break;end if (v126~=(0 -0)) then else v127=0 + 0 ;v128=nil;v126=1;end end end if (v119~=1) then else if (v120==(1 + 0)) then v121=v22()~=0 ;elseif (v120==(1026 -(483 + 541))) then v121=v25();elseif (v120==(7 -4)) then v121=v26();end v38[v116]=v121;break;end end break;end end break;end if (v117==(1 -0)) then v120=nil;v121=nil;v117=6 -4 ;end end end v36[5 -2 ]=v22();v104=1;end end end break;end end end break;end if (v31~=2) then else v36=nil;v37=nil;v31=3;end if (v31==1) then v34=nil;v35=nil;v31=2;end end end v30=nil;v18=7;end if (v18==2) then function v22()local v39=v1(v16,v19,v19);v19=v19 + 1 ;return v39;end v23=nil;function v23()local v40,v41=v1(v16,v19,v19 + 1 + 1 );v19=v19 + 2 ;return (v41 * (692 -436)) + v40 ;end v18=3;end if (v18==1) then v21=nil;function v21(v42,v43,v44)if v44 then local v74=0 + 0 ;local v75;while true do if (v74==(0 + 0)) then v75=(v42/((1 + 1)^(v43-(1 -0))))%((3 -1)^(((v44-1) -(v43-(1 -0))) + (1088 -(824 + 263)))) ;return v75-(v75%(1520 -(429 + 146 + 944))) ;end end else local v76=2^(v43-(1617 -(171 + 1445))) ;return (((v42%(v76 + v76))>=v76) and 1) or (0 -0) ;end end v22=nil;v18=2;end if (v18==4) then function v25()local v45=v24();local v46=v24();local v47=3 -2 ;local v48=(v21(v46,1,1769 -((193 -95) + 1651) ) * ((1 + 1)^(1912 -(918 + 962)))) + v45 ;local v49=v21(v46,579 -(121 + 437) ,(138 -75) -32 );local v50=((v21(v46,65 -33 )==(72 -(15 + 56))) and  -1) or ((2486 -990) -(77 + (2416 -(334 + 664)))) ;if (v49==0) then if (v48==0) then return v50 * (1028 -(357 + 671)) ;else local v81=0 + (0 -0) ;while true do if (v81==(330 -(93 + 237))) then v49=1 + 0 ;v47=481 -(115 + 366) ;break;end end end elseif (v49==(3550 -(76 + 1427))) then return ((v48==(0 -0)) and (v50 * ((1 + 0)/(0 -0)))) or (v50 * NaN) ;end return v8(v50,v49-(2511 -(1402 + 86)) ) * (v47 + (v48/((474 -(232 + 240))^(588 -(487 + 49))))) ;end v26=nil;function v26(v51)local v52;if  not v51 then local v77=0 -0 ;while true do if (v77==(0 -0)) then v51=v24();if (v51==((0 -0) + 0)) then return "";end break;end end end v52=v3(v16,v19,(v19 + v51) -((938 -(102 + 35)) -(76 + 724)) );v19=v19 + v51 ;local v53={};for v66=1, #v52 do v53[v66]=v2(v1(v3(v52,v66,v66)));end return v6(v53);end v18=5;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==7) then function v30(v54,v55,v56)local v57=v54[1];local v58=v54[2];local v59=v54[3];return function(...)local v68=0;local v69;local v70;local v71;local v72;local v73;while true do if (v68==3) then A,B=v28(v11(v73));if  not A[1] then local v93=v54[4][v69] or "?" ;error("Script error at ["   .. v93   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v68==2) then v73=nil;function v73()local v83=v57;local v84=v58;local v85=v59;local v86=v28;local v87={};local v88={};local v89={};for v94=0 + 0 ,v72 do if ((v94>=v85) or ((2591 -(558 + 52))<=(4236 -2787))) then v87[v94-v85 ]=v71[v94 + 1 ];else v89[v94]=v71[v94 + 1 ];end end local v90=(v72-v85) + ((3279 -1473) -(867 + 938)) ;local v91;local v92;while true do local v95=1842 -(41 + 14 + 1787) ;local v96;local v97;while true do if (((11282 -8023)==((2480 + 11772) -10993)) and ((2 -1)==v95)) then while true do if ((v96==(1302 -(615 + 687))) or ((459 + 1465)==(2558 -(159 + 973)))) then v97=0 + 0 ;while true do if ((v97==(1 + 0)) or ((110 + 4040)<((125 + 512) -(43 + 478)))) then if ((1189>(184 -96)) and (v92<=(18 -4))) then if ((v92<=6) or ((5405 -(696 + 1214))>(4368 + 248))) then if ((v92<=(1843 -(1009 + 832))) or (2581>(3067 + 840))) then if (((3218 -(286 + 1363))<=((673 -456) + 1558)) and (v92<=(1560 -(650 + 910)))) then local v130=1498 -(1048 + 450) ;local v131;while true do if (((2957 -629)<(7866 -4882)) and (v130==(233 -(75 + 158)))) then v131=v91[(1753 -(1518 + 234)) + (1 -0) ];v89[v131]=v89[v131](v13(v89,v131 + (4 -3) ,v91[3]));break;end end elseif ((((900 -(766 + 43)) + 138)<=((4158 + 1307) -(450 + 1245))) and (v92==(790 -(172 + 617)))) then for v207=v91[3 -1 ],v91[7 -4 ] do v89[v207]=nil;end else v89[v91[2]]=v91[3 + 0 ];end elseif ((v92<=(3 + 1)) or ((4611 -(269 + 553))<(4887 -(141 + 1083)))) then if (((1108 + 1063)==(1659 + 512)) and (v92==(1 + 0 + 2))) then v89[v91[6 -4 ]]=v89[v91[(510 -(455 + 54)) + 2 ]];elseif ((v89[v91[1597 -(1219 + 376) ]]==v91[260 -(235 + 21) ]) or ((8907 -(12574 -8623))<(6028 -(899 + 474)))) then v69=v69 + (2 -1) ;else v69=v91[655 -(329 + 323) ];end elseif (((14594 -10358)>=43) and (v92==5)) then local v142=0;local v143;while true do if ((1304<=(15801 -11039)) and (v142==0)) then v143=v91[9 -7 ];v89[v143]=v89[v143](v89[v143 + (1417 -(171 + 1245)) ]);break;end end else local v144=1376 -(711 + 665) ;local v145;local v146;local v147;while true do if ((v144==((2240 -(207 + 82)) -(1383 + (2563 -(176 + 1820))))) or ((10415 -5810)<(3195 + 1041))) then v147=nil;while true do if ((v145==(1528 -((1108 -(207 + 632)) + 1259))) or ((2090 -(384 + 205))>=(8565 -5562))) then v146=0 -0 ;v147=nil;v145=1;end if ((2993<(1630 + 1958)) and (v145==(1 + 0))) then while true do if ((v146==(0 -0)) or ((17137 -13573)==(9403 -6877))) then v147=v91[2];v89[v147](v13(v89,v147 + (4 -3) ,v91[9 -(1599 -(6 + 1587)) ]));break;end end break;end end break;end if (((579 -281)==(401 -(14 + 89))) and (v144==(0 -0))) then v145=(0 + 0) -0 ;v146=nil;v144=1;end end end elseif ((v92<=(8 + 2)) or ((10501 -6907)<((5098 -(1730 + 207)) -795))) then if ((3889>(3025 -(496 + 660))) and (v92<=(1352 -((1234 -235) + 345)))) then if ((v92>(27 -(77 -57))) or (1701<(2332 -(1458 + 333)))) then local v148=377 -(144 + 233) ;local v149;local v150;while true do if (((4780 -(494 + 924))==3362) and (v148==(0 + 0))) then local v220=109 -(87 + 22) ;while true do if ((v220==(2 -1)) or ((18060 -13453)==(740 + 2323))) then v148=4 -3 ;break;end if (((4037 -(1268 + 462))>(102 + 35)) and (v220==(0 + 0))) then v149=v91[(502 -(268 + 171)) -(44 + 17) ];v150=v89[v149];v220=1 + 0 ;end end end if (((691 -(394 + 296))==v148) or ((11750 -6969)<((2639 -(122 + 339)) -(686 + 364)))) then for v227=v149 + (2 -1) ,v70 do v7(v150,v89[v227]);end break;end end else v89[v91[829 -(627 + 200) ]]=v55[v91[3 + (0 -0) ]];end elseif ((v92==9) or ((10908 -6193)<=(673 + 1047))) then local v153=1254 -(807 + 447) ;local v154;local v155;local v156;local v157;local v158;while true do if ((v153==(1632 -(1614 + 16))) or ((3270 -(237 + 260))>(5361 -(441 + 1252)))) then v158=nil;while true do if (((1082 + 1845)<(4521 -(157 + 358))) and (2==v154)) then while true do if ((2920>1394) and (v155==(1 + 0))) then local v263=0 + 0 ;local v264;while true do if (((1394 -(213 + (1244 -(57 + 6))))==v263) or ((11308 -6522)<3579)) then v264=(0 -0) -(622 -(485 + 137)) ;while true do if ((v264==(0 + 0)) or ((1778 + 753)==2648)) then local v296=0;while true do if ((v296==(1686 -(482 + 1204))) or ((827 + 296)>(5945 -(1072 + 180)))) then v158={};v157=v10({},{__index=function(v312,v313)local v314=0 -0 ;local v315;local v316;while true do if (((9112 -6801)<(6880 -((1766 -810) + 978))) and (v314==0)) then v315=1714 -(266 + 259 + 1189) ;v316=nil;v314=128 -(65 + 62) ;end if ((v314==(1 + 0)) or ((2384 -1535)>(4423 -(68 + 348)))) then while true do if (((170 + 808)<=(10569 -6986)) and (v315==(1548 -(580 + 968)))) then local v330=0;while true do if (((6030 -(89 + 985))>=(10675 -6781)) and (v330==(0 -0))) then v316=v158[v313];return v316[1 + 0 ][v316[2]];end end end end break;end end end,__newindex=function(v317,v318,v319)local v320=0 -0 ;local v321;local v322;local v323;while true do if ((v320==(1 -0)) or ((2172 + 391)<=(306 + 654))) then v323=nil;while true do if (((6747 -(1007 + 843))>=(5324 -2279)) and (v321==(919 -(649 + 228 + 42)))) then local v331=0;while true do if ((v331==1) or ((1085 + 1292)<=(5369 -3330))) then v321=(2050 -1355) -(527 + (622 -455)) ;break;end if ((v331==(0 -0)) or ((153 + 58)>(2299 -((2607 -(573 + 576)) + 216)))) then v322=0 -0 ;v323=nil;v331=864 -(640 + 223) ;end end end if ((v321==(2 -1)) or ((12999 -10370)<(501 + 461))) then while true do if ((v322==0) or ((743 + 2153)>=(281 + 3428))) then v323=v158[v318];v323[1 + 0 ][v323[(173 + 275) -(430 + 16) ]]=v319;break;end end break;end end break;end if ((v320==(0 -0)) or (1718>(23 + 1838))) then v321=0 + 0 ;v322=nil;v320=1100 -(695 + 404) ;end end end});v296=1;end if (((4337 -2248)>=738) and (v296==(1 + (1978 -(1889 + 89))))) then v264=1 + 0 ;break;end end end if ((3365>=((3141 -(1371 + 287)) + 521)) and (v264==(1 + 0))) then v155=9 -7 ;break;end end break;end end end if ((v155==((909 -(760 + 149)) + 0)) or ((3413 -1487)>=2325)) then local v265=0;local v266;while true do if (((17 + 678)<4428) and (v265==(566 -(196 + (2081 -(739 + 972)))))) then v266=624 -(12 + 612) ;while true do if ((v266==(197 -(100 + 96))) or (((12535 -3291) -4846)==(636 + 1966))) then v155=1;break;end if (((6013 -(340 + 1017))==(6442 -(1388 + 398))) and (v266==(0 -0))) then local v297=0 -0 ;while true do if ((v297==(2 -1)) or ((4284 -(41 + 29 + 795))<(534 + 413))) then v266=1;break;end if (((0 + 0 + 0)==v297) or (1941>=(2771 -(15 + 66)))) then v156=v84[v91[2 + 1 ]];v157=nil;v297=427 -(35 + 391) ;end end end end break;end end end if (((1430 -414)>=(2222 -(808 + 608))) and (v155==(2 + 0))) then for v278=1,v91[4 + 0 ] do local v279=1823 -(1310 + 513) ;local v280;local v281;while true do if ((1129<(1680 + 1931)) and (v279==((1847 -(395 + 1449)) -2))) then while true do if ((((4894 -3425) -891)==(1278 -(327 + 373))) and (v280==0)) then v69=v69 + (1 -0) ;v281=v83[v69];v280=(2 -1) -(1160 -(1071 + 89)) ;end if ((v280==(433 -(40 + 122 + 270))) or ((4798 -(793 + 453))<2653)) then if ((((3001 -1365) -(724 + 226))<=(8969 -4522)) and (v281[2 -(1339 -(239 + 1099)) ]==(3 + 0))) then v158[v278-(4 -3) ]={v89,v281[3]};else v158[v278-(870 -(68 + 801)) ]={v55,v281[13 -10 ]};end v88[ #v88 + (1337 -(1126 + 210)) ]=v158;break;end end break;end if (((4944 -(88 + 206))>=2990) and (v279==(261 -(150 + 111)))) then v280=1379 -(1236 + 143) ;v281=nil;v279=1 + 0 ;end end end v89[v91[2 + 0 + 0 ]]=v30(v156,v157,v56);break;end end break;end if ((v154==(0 -0)) or (3460>=(10957 -6634))) then local v234=0;while true do if (((5324 -(215 + 1412))>=3320) and (v234==0)) then v155=0 + 0 + 0 ;v156=nil;v234=661 -(24 + 636) ;end if (((3085 -1640)>=(259 -(276 -92))) and (v234==1)) then v154=70 -(44 + (718 -(643 + 50))) ;break;end end end if ((v154==(3 -2)) or ((3161 -(30 + 1071))==(6114 -(244 + 1027)))) then local v235=0 + 0 ;while true do if ((v235==(1287 -(665 + 182 + 440))) or (604>=(777 -(21 + 29)))) then v157=nil;v158=nil;v235=1 + 0 ;end if ((v235==(1 -0)) or (2314==(240 + 467))) then v154=1769 -(141 + 1626) ;break;end end end end break;end if ((v153==(0 -(0 -0))) or ((4458 -(590 + 126 + 210))>(5122 -((1302 -(758 + 470)) + 1002)))) then v154=1043 -(407 + 636) ;v155=nil;v153=539 -(385 + 153) ;end if ((v153==(1 + 0)) or (1945<117)) then v156=nil;v157=nil;v153=1148 -(812 + 334) ;end end elseif (((12717 -9020)>(4357 -2852)) and (v91[535 -(466 + (160 -93)) ]==v89[v91[9 -5 ]])) then v69=v69 + 1 + 0 ;else v69=v91[1 + 2 ];end elseif ((v92<=(3 + 9)) or (((1546 + 2173) -(211 + 256))==(5176 -(33 + 1600)))) then if ((v92==(1186 -(1070 + 105))) or ((2731 -(907 + 23))<=(5063 -3899))) then v89[v91[2]]=v56[v91[2 + 1 ]];else v89[v91[1 + 1 ]][v91[(4 + 4) -5 ]]=v89[v91[7 -3 ]];end elseif ((v92==(1127 -(82 + 1032))) or ((4166 -(1591 + 397))<1806)) then do return;end else local v163=1833 -(776 + (2920 -1863)) ;local v164;local v165;local v166;while true do if (((3243 -(1111 + 352))<=3429) and (v163==(1 + 0))) then v166=nil;while true do if (((2538 -1603)>(347 + 2)) and (v164==(1956 -(1676 + 279)))) then v89[v165 + 1 + (134 -(117 + 17)) ]=v166;v89[v165]=v166[v91[2 + 2 ]];break;end if (((120 + 559)<=(6877 -(1384 + 507))) and ((0 -0)==v164)) then local v239=1221 -(1033 + (635 -447)) ;while true do if ((v239==(0 + 0)) or (1599==1740)) then v165=v91[(20 -13) -5 ];v166=v89[v91[447 -((706 -357) + 95) ]];v239=195 -(54 + 140) ;end if (((1 + 0)==v239) or ((1465 -971)>((3390 -(87 + 895)) -(415 + 23)))) then v164=3 -2 ;break;end end end end break;end if ((v163==0) or ((1337 -(257 + 881))==366)) then v164=0;v165=nil;v163=1356 -(470 + 885) ;end end end elseif ((v92<=(1712 -(1555 + (1708 -(267 + 1306))))) or ((10800 -7630)>=(5422 -(274 + (2009 -1334))))) then if ((v92<=(1083 -(280 + 785))) or (1215<=(821 -501))) then if (((2306 -1586)<=1695) and (v92<=(1 + 15))) then if ((v92>(30 -15)) or ((697 + 2567)==(6824 -4059))) then local v167=0;local v168;local v169;local v170;local v171;while true do if ((v167==((6 + 0) -4)) or (2279<=(1268 + 325))) then for v228=v168,v70 do local v229=0 -(0 + 0) ;local v230;while true do if (((50 + 1349)>=(2798 -2232)) and (v229==((0 -0) -0))) then v230=0 -0 ;while true do if (((15146 -(5438 + 5788))>=698) and (v230==((2879 -(661 + 713)) -(1110 + 395)))) then v171=v171 + (2 -1) ;v89[v228]=v169[v171];break;end end break;end end end break;end if ((v167==(1 + 0)) or ((3270 + 1410)==483)) then local v221=0 + 0 ;while true do if (((2298 + 1472)<=(4895 -(210 + (1149 -(40 + 838))))) and (v221==(111 -(6 + 104)))) then v167=824 -(718 + 104) ;break;end if ((v221==0) or (95>=(846 + 108))) then v70=(v170 + v168) -(1600 -(365 + 1234)) ;v171=0 -(0 + 0) ;v221=1;end end end if ((v167==0) or ((962 + 8 + 13)==(7353 -5348))) then v168=v91[1 + (1 -0) ];v169,v170=v86(v89[v168](v13(v89,v168 + (2 -1) ,v70)));v167=1 + 0 ;end end else local v172=0;local v173;local v174;local v175;local v176;while true do if ((v172==2) or ((1348 -(1135 + (344 -226)))>=(1059 + 741))) then while true do if (((4731 -1491)>(59 + 2130)) and (v173==(1778 -(1176 + 602)))) then v174=0 -0 ;v175=nil;v173=1466 -(155 + 1310) ;end if ((v173==(1 + 0)) or ((516 + 861)>=(7528 -5904))) then v176=nil;while true do if (((2193 + 1486)>2583) and (v174==((374 + 1166) -(104 + 525 + 911)))) then local v270=659 -(608 + 51) ;local v271;while true do if (((187 + (1730 -865))<1099) and (v270==(0 -0))) then v271=0;while true do if ((521<(12629 -9154)) and (v271==((0 -0) -0))) then v175=v91[986 -(497 + 487) ];v176=v89[v175];v271=4 -3 ;end if (((8102 -6229)==(954 + 919)) and (v271==(1305 -(354 + 950)))) then v174=1;break;end end break;end end end if (((127 + 3451)>=(130 + 583)) and (v174==(925 -(649 + 275)))) then for v284=v175 + 1 + 0 ,v91[7 -4 ] do v7(v176,v89[v284]);end break;end end break;end end break;end if (((11386 -8880)>(2368 -(1090 + 874))) and (v172==1)) then v175=nil;v176=nil;v172=1316 -(805 + 509) ;end if ((v172==((0 -0) + 0)) or ((10034 -8004)>=(1393 + (4011 -(1098 + 222))))) then v173=0 + 0 + 0 ;v174=nil;v172=3 -2 ;end end end elseif ((v92>(244 -(9 + 218))) or (2959>3876)) then v89[v91[6 -4 ]]();else local v177=0 + 0 ;local v178;local v179;local v180;while true do if ((1292==1292) and (v177==(1 + 0))) then v180=nil;while true do if ((v178==(0 + 0)) or (1681>=(1701 + 2275))) then local v240=0 + 0 ;while true do if (((4948 -3152)<=1854) and (v240==0)) then v179=v91[1139 -(873 + (986 -(363 + 359))) ];v180={};v240=939 -(447 + 491) ;end if (((10911 -7198)>(3028 -(452 + 782))) and (v240==(1 -(1570 -(180 + 1390))))) then v178=4 -(3 + 0) ;break;end end end if ((v178==(1 + 0)) or ((3160 + 1512)>=(6696 -(535 + 1242)))) then for v252=1, #v88 do local v253=0 + 0 ;local v254;local v255;while true do if ((v253==(1637 -(236 + 667 + 733))) or (2153>(3057 + 113))) then while true do if (((6508 -(1954 + 1551))==(4512 -(1446 + 63))) and (v254==0)) then v255=v88[v252];for v291=0, #v255 do local v292=0;local v293;local v294;local v295;while true do if ((1548<=((7087 -(506 + 613)) -(1115 + 756))) and ((939 -(910 + 29))==v292)) then local v305=533 -(258 + 275) ;while true do if (((1 -(0 -0))==v305) or (2524<((8667 -3739) -2428))) then v292=2 -1 ;break;end if (((5480 -(875 + 693))<=(16251 -12183)) and (v305==0)) then v293=v255[v291];v294=v293[1633 -(44 + 1588) ];v305=989 -(401 + 587) ;end end end if (((4084 -(683 + 56))>(2327 -(65 + 1934))) and (1==v292)) then v295=v293[2];if (((2268 + 1083)<(7563 -3901)) and (v294==v89) and (v295>=v179)) then local v324=(822 + 109) -(689 + 242) ;local v325;while true do if ((v324==0) or ((2224 + 2551)<(3188 -2146))) then v325=0 -0 ;while true do if ((2672>(3830 -(1194 + (1385 -(1272 + 6))))) and ((0 + 0)==v325)) then v180[v295]=v294[v295];v293[1 + 0 ]=v180;break;end end break;end end end break;end end end break;end end break;end if ((((5065 -(599 + 459)) -(186 + 154))>=(699 -(74 + (1154 -628)))) and (v253==(0 + 0))) then v254=0;v255=nil;v253=1838 -(184 + 766 + (962 -(9 + 66))) ;end end end break;end end break;end if ((v177==(0 -0)) or ((1021 + 327)>=(9513 -7469))) then v178=0;v179=nil;v177=(1 + 0) -0 ;end end end elseif (((5611 -((301 -187) + 1131))>=(678 + 2522)) and (v92<=(938 -(719 + 199)))) then if ((v92>(17 + 2)) or ((1682 -1260)>=(2469 -(1211 + 218)))) then if (((2044 + 2791)>=4587) and v89[v91[2 + 0 ]]) then v69=v69 + (2 -1) ;else v69=v91[(2929 -(412 + 945)) -(392 + 1177) ];end else local v181=0 -0 ;local v182;local v183;local v184;local v185;while true do if (((570 + 645)>(1357 -(204 + 142))) and (v181==(1893 -(798 + 1093)))) then while true do if ((4519>(7507 -4130)) and (v182==(35 -(13 + 21)))) then v185=v91[3 + 0 ];for v256=(1668 -(303 + 1362)) -(6 -4) ,v185 do v184[v256]=v89[v183 + v256 ];end break;end if ((v182==((0 -0) + 0)) or (1336>=(8899 -(2615 + 3512)))) then local v242=0 + 0 ;local v243;while true do if ((v242==(53 -(27 + 26))) or ((3458 -(597 + 233))>=(9461 -5975))) then v243=0 + 0 ;while true do if ((4239>=(836 + 2010)) and (0==v243)) then local v286=0 + 0 ;while true do if (((13830 -8908)==4922) and (1==v286)) then v243=1;break;end if ((v286==(0 -0)) or ((15195 -10613)<=(914 + 2498))) then v183=v91[2 + 0 ];v184=v89[v183];v286=1 + 0 ;end end end if (((5257 -(1168 + 455))>=(662 -217)) and (v243==(1 + 0))) then v182=1 + 0 ;break;end end break;end end end end break;end if ((v181==(2 -1)) or ((1363 + 942)>=(3287 + 66 + 328))) then local v223=0 + 0 ;while true do if ((v223==0) or (3912<3504)) then v184=nil;v185=nil;v223=1 -0 ;end if ((v223==(1119 -(685 + (2108 -(1261 + 414))))) or ((2384 + (2563 -(1378 + 317)))<=(154 + 2))) then v181=6 -4 ;break;end end end if ((3878>(10600 -7948)) and (v181==(406 -(337 + (283 -214))))) then local v224=1682 -(39 + 1643) ;while true do if ((v224==(747 -(669 + 77))) or (2192==(7956 -4737))) then v181=1 + 0 ;break;end if (((2584 + 1622)>((5304 -3875) + 1027)) and ((1850 -(14 + 1836))==v224)) then v182=0 -0 ;v183=nil;v224=1885 -(1465 + 342 + 77) ;end end end end end elseif ((v92==(1608 -(486 + 1101))) or ((2260 -(1637 + 234))==(1146 -645))) then v89[v91[582 -(371 + 209) ]]=v89[v91[3]][v91[1481 -(697 + 780) ]];elseif (((5098 -(90 + 126))==4882) and (v89[v91[2]]~=v89[v91[4]])) then v69=v69 + (1823 -(1297 + 525)) ;else v69=v91[1 + 2 ];end elseif ((v92<=(621 -(227 + 368))) or ((388 + 80)>(3733 + 289))) then if ((4557>3751) and (v92<=(28 -4))) then if ((v92==(507 -(119 + (384 -(12 + 7))))) or ((3727 -2660)<(48 + 62))) then v89[v91[899 -(243 + 654) ]]=v91[3]~=(0 + 0) ;else local v189=0 -0 ;local v190;local v191;while true do if ((4168<=(1454 + 2769)) and ((1 -(1766 -(771 + 995)))==v189)) then while true do if ((3613>(1256 + 318)) and (v190==(0 -0))) then v191=v91[1790 -(705 + 1083) ];v89[v191]=v89[v191](v13(v89,v191 + 1 ,v70));break;end end break;end if ((v189==(0 + 0)) or ((3483 -(403 + 1232))>(7121 -3323))) then v190=699 -(468 + 231) ;v191=nil;v189=1 + 0 ;end end end elseif ((4408>=(282 -176)) and (v92==(1403 -(193 + 1185)))) then if ( not v89[v91[2 + 0 ]] or ((1048 + 161)<=858)) then v69=v69 + (1 -0) ;else v69=v91[3];end else v89[v91[2]]={};end elseif ((3434==(2894 + 540)) and (v92<=((2246 -(801 + 204)) -(213 + 1000)))) then if (((64 + 727)<(2838 + 1004)) and (v92>(69 -(1044 -(475 + 527))))) then v69=v91[1575 -(279 + (2020 -(276 + 451))) ];else local v194=0 + 0 ;local v195;local v196;local v197;local v198;local v199;while true do if ((3279==3279) and (v194==(4 -3))) then v197=nil;v198=nil;v194=2 + 0 ;end if (((5980 -3698)==((9880 -3771) -3827)) and ((84 -(29 + 24 + 29))==v194)) then v199=nil;while true do if (((1854 -1095)>=(580 -178)) and (v195==(2 + 0))) then for v259=v196,v70 do local v260=0 -0 ;local v261;while true do if ((v260==0) or ((5185 -(361 + 64))<=(648 -266))) then v261=0 + 0 ;while true do if ((v261==(0 + 0)) or ((1679 + 1096)==4830)) then v199=v199 + (201 -(114 + 86)) ;v89[v259]=v197[v199];break;end end break;end end end break;end if ((v195==(1283 -(950 + 333))) or (688>=(8765 -5777))) then local v246=0;while true do if ((509<=(14204 -11170)) and (v246==(2 -1))) then v195=252 -(97 + 154) ;break;end if ((v246==(1645 -(1509 + 136))) or ((3072 -(1177 + 240))==(3598 + 204 + 895))) then v196=v91[864 -((2409 -(1368 + 360)) + (370 -189)) ];v197,v198=v86(v89[v196](v13(v89,v196 + 1 + 0 ,v91[11 -(17 -9) ])));v246=1;end end end if (((2179 -(269 + 453))==1457) and (v195==(861 -(739 + 121)))) then v70=(v198 + v196) -(1 -(0 -0)) ;v199=0 + 0 ;v195=(637 + 725) -(459 + 649 + 252) ;end end break;end if (((3196 -1330)>((1306 -(243 + 176)) -(167 + 13))) and ((0 -0)==v194)) then v195=0 -0 ;v196=nil;v194=1371 -(5 + 1365) ;end end end elseif (((1228 -(959 + (999 -(81 + 867))))<=(541 + 1056)) and (v92>(37 -8))) then local v200=0 -0 ;local v201;local v202;while true do if (((3352 -(350 + 99))>=(1293 + 385)) and (v200==0)) then v201=814 -(313 + 501) ;v202=nil;v200=1054 -(408 + (931 -286)) ;end if ((v200==(1 + 0)) or ((6190 -4529)<(707 -(37 + 56)))) then while true do if ((((4567 -(361 + 943)) -1123)==(3743 -1603)) and (v201==0)) then v202=v91[1015 -(650 + 363) ];v89[v202](v89[v202 + 1 + 0 ]);break;end end break;end end else v89[v91[62 -(38 + 22) ]][v91[657 -(146 + 98 + 410) ]]=v91[1101 -((2454 -(674 + 1142)) + 459) ];end v69=v69 + (91 -(81 + 9)) ;break;end if (((1794 + 1769)>=(445 -(59 + 282))) and (v97==(0 + (1258 -(1185 + 73))))) then local v122=0 -0 ;local v123;while true do if (((0 -(1174 -(757 + 417)))==v122) or (((2590 -(430 + 675)) -525)==3778)) then v123=0 -0 ;while true do if ((3287>=(542 + 2511)) and (v123==(1 + 0))) then v97=1 + 0 ;break;end if ((v123==(0 -0)) or (2246>=4511)) then local v125=0 -0 ;while true do if ((v125==(2 -(1 -0))) or ((1308 -(95 + 673))>2677)) then v123=1 + 0 ;break;end if ((v125==0) or ((4472 -(964 + 339))<=(4054 -(525 + 680)))) then v91=v83[v69];v92=v91[1 + (0 -0) ];v125=1;end end end end break;end end end end break;end end break;end if ((3135<(9037 -5038)) and (v95==(0 -0))) then v96=0 + 0 ;v97=nil;v95=1;end end end end v68=3;end if (v68==1) then v71={...};v72=v12("#",...) -1 ;v68=2;end if (v68==0) then v69=1;v70= -1;v68=1;end end end;end return v30(v29(),{},v17)(...);end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v60)if (v1(v60,2)==79) then local v78=0;while true do if (v78==0) then v20=v0(v3(v60,1,1));return "";end end else local v79=v2(v0(v60,16));if v20 then local v82=v5(v79,v20);v20=nil;return v82;else return v79;end end end);v18=1;end if (v18==3) then v24=nil;function v24()local v61=0 -0 ;local v62;local v63;local v64;local v65;while true do if (v61==(1064 -(464 + 323 + 276))) then return (v65 * (16778891 -(194 + 1481))) + (v64 * (67041 -(651 + 854))) + (v63 * (219 + 37)) + v62 ;end if (v61==0) then v62,v63,v64,v65=v1(v16,v19,v19 + (1694 -(450 + 733 + 508)) );v19=v19 + (1513 -(225 + 1284)) ;v61=1;end end end v25=nil;v18=4;end end end vv9(),...);end
